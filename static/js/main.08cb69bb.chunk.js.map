{"version":3,"sources":["components/head.js","components/task.js","components/list.js","components/input.js","App.js","reportWebVitals.js","index.js"],"names":["Head","className","Task","Tasks","onDelete","onUpdate","id","onClick","stats","title","desc","width","height","src","updum","List","useState","setdummy","numb","length","list","i","push","update","updateTask","console","log","Input","updateList","setTitle","setDesc","onSubmit","e","preventDefault","alert","type","name","value","onChange","target","cols","rows","App","rawData","localStorage","getItem","data","JSON","parse","TaskList","setTaskList","useEffect","setItem","stringify","deleteTask","filter","addTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08cb69bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Style/head.css';\r\n\r\nfunction Head(){\r\n    return(\r\n        <>\r\n        <p className=\"title\">ToDos list</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Head;","import React, { useState } from 'react';\r\nimport '../Style/task.css';\r\nimport './list';\r\n\r\nfunction Task({Tasks, onDelete, onUpdate}){\r\n    return(\r\n        <div id=\"card\">\r\n            <div id=\"cardCont\">\r\n                <div id=\"status\" onClick={()=>onUpdate(Tasks)} >\r\n                    {Tasks.stats === \"1\" ? <div id=\"statusCircle-green\"></div> : <div id=\"statusCircle-yellow\"></div> }\r\n                </div>\r\n                <div id=\"taskName\">\r\n                    <div id=\"taskTitle\">{Tasks.title}</div>\r\n                    <div id=\"taskDesc\">{Tasks.desc}</div>\r\n                </div>\r\n                <button id=\"delete\" onClick={()=>{onDelete(Tasks)}}>\r\n                    <img width=\"30px\" height=\"30px\" src=\"https://img.icons8.com/ios-filled/50/fa314a/delete--v1.png\"/>\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task;","import React, { useState } from 'react';\r\nimport '../Style/list.css';\r\nimport Task from './task.js';\r\n\r\nvar updum = 0;\r\n\r\nfunction List( {Tasks, onDelete} ){\r\n    const [dummy, setdummy] = useState(0);\r\n\r\n    var numb = Tasks.length;\r\n\r\n    const list = [];\r\n\r\n    for(var i=0; i<Tasks.length; i++){\r\n        list.push(<Task Tasks={Tasks[i]} onDelete={onDelete} onUpdate={update}/>);\r\n    }\r\n\r\n    function update(updateTask){\r\n        for(var i=0; i<Tasks.length; i++){\r\n            if(Tasks[i].title === updateTask.title){\r\n                updum++;\r\n                if(Tasks[i].stats === \"0\"){\r\n                    Tasks[i].stats = \"1\";\r\n                    setdummy(updum);\r\n                }\r\n                else{\r\n                    Tasks[i].stats = \"0\";\r\n                    setdummy(updum);\r\n                }\r\n                console.log(Tasks[i].stats);\r\n\r\n                console.log(\"trying to change\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"listBody\">\r\n            <div id=\"listCont\">\r\n                <p id=\"listTitle\">ToDo list</p>\r\n                <div id=\"number\">\r\n                    <div id=\"listDesc\">Number of tasks</div>\r\n                    <div id=\"numberBadge\">{numb}</div>\r\n                </div>\r\n                <div id=\"taskCont\">\r\n                    {numb === 0 ?<div id=\"zero-task\">No Tasks pending</div>: list}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;","import React, { useState } from 'react';\r\nimport '../Style/input.css'\r\n\r\n\r\nfunction Input({updateList}){\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n    function Submit(e){\r\n        e.preventDefault();\r\n        if(!title){\r\n            alert(\"Title or description can't be left blank\");\r\n        }\r\n        else{\r\n            updateList(title, desc);\r\n            setTitle(\"\");\r\n            setDesc(\"\");\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"inputBody\">\r\n            <div id=\"inputCont\">\r\n                <p>Enter task ToDo:</p>\r\n                <form onSubmit={Submit} >\r\n                    <div id=\"getInput\">\r\n                        <p>Enter title of the task</p>\r\n                        <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e)=> setTitle(e.target.value)} />\r\n                        <p>Enter description:</p>\r\n                        <textarea name=\"desc\" id=\"desc\" cols=\"auto\" rows=\"4\" value={desc} onChange={(e)=> setDesc(e.target.value)}></textarea>\r\n                    </div>\r\n                    <input type=\"submit\" id=\"submit\" value=\"Add task\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import './App.css';\nimport Head from './components/head';\nimport List from './components/list';\nimport Input from './components/input';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  var rawData = localStorage.getItem(\"ToDoData\");\n  var data = JSON.parse(rawData);\n\n  const [TaskList, setTaskList] = useState(\n    data\n  );\n\n  function Delete(deleteTask) {\n    deleteTask.stats = \"0\";\n\n    setTaskList(TaskList.filter((e)=>{\n      return e !== deleteTask;\n    }));\n  }\n\n  function addToList(title, desc){\n    const addTask = {\n      stats: \"0\",\n      title: title,\n      desc: desc\n    };\n\n    setTaskList([...TaskList, addTask]);\n  }\n\n  useEffect(()=>{\n    localStorage.setItem(\"ToDoData\", JSON.stringify(TaskList));\n  },[TaskList])\n\n  return (\n    <div className=\"App\">\n      <Head/>\n      <div className=\"body\">\n        <div className=\"child list\">\n          <List Tasks={TaskList} onDelete={Delete}/>\n        </div>\n        <div className=\"child input\">\n          <Input updateList={addToList}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}